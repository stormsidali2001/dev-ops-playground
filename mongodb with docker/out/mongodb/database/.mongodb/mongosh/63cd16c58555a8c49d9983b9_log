{"t":{"$date":"2023-01-22T10:58:13.989Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":"xterm"},"version":"1.6.1","distributionKind":"compiled","buildArch":"x64","buildPlatform":"linux","buildTarget":"linux-x64","buildTime":"2022-11-30T13:59:57.200Z","gitVersion":"51c067456d3e0127156ef1722a44659151e01a12","nodeVersion":"v16.17.0","opensslVersion":"1.1.1q+quic","sharedOpenssl":false}}
{"t":{"$date":"2023-01-22T10:58:13.997Z"},"s":"I","c":"MONGOSH","id":1000000005,"ctx":"config","msg":"User updated"}
{"t":{"$date":"2023-01-22T10:58:13.998Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2023-01-22T10:58:14.047Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.1","driver":{"name":"nodejs|mongosh","version":"4.12.1"},"devtoolsConnectVersion":"1.4.3","host":"127.0.0.1:27017"}}
{"t":{"$date":"2023-01-22T10:58:14.057Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2023-01-22T10:58:14.076Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2023-01-22T10:58:14.097Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"63cd16c58555a8c49d9983b9","userId":null,"telemetryAnonymousId":"63cd0b3dc28df4180bf59df2","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.1","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"6.0.3","node_version":"v16.17.0","mongosh_version":"1.6.1","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","fcv":"6.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2023-01-22T10:58:14.101Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"ping":1}}}}
{"t":{"$date":"2023-01-22T10:58:14.102Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-01-22T10:58:14.213Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2023-01-22T10:58:14.217Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show startupWarnings"}}
{"t":{"$date":"2023-01-22T10:58:14.219Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getLog":"startupWarnings"}}}}
{"t":{"$date":"2023-01-22T10:58:14.220Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-01-22T10:58:14.221Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show freeMonitoring"}}
{"t":{"$date":"2023-01-22T10:58:14.221Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getFreeMonitoringStatus":1}}}}
{"t":{"$date":"2023-01-22T10:58:14.222Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-01-22T10:58:14.223Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show automationNotices"}}
{"t":{"$date":"2023-01-22T10:58:14.225Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"hello","class":"Database","db":"test","arguments":{}}}
{"t":{"$date":"2023-01-22T10:58:14.226Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000024,"ctx":"snippets","msg":"Fetching snippet index","attr":{"refreshMode":"allow-cached"}}
{"t":{"$date":"2023-01-22T10:58:14.227Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2023-01-22T10:58:14.233Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000027,"ctx":"snippets","msg":"Fetching snippet index done"}
{"t":{"$date":"2023-01-22T10:58:14.238Z"},"s":"I","c":"MONGOSH","id":1000000002,"ctx":"repl","msg":"Started REPL","attr":{"version":"1.6.1"}}
{"t":{"$date":"2023-01-22T10:58:19.400Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"db1"}}
{"t":{"$date":"2023-01-22T10:58:19.419Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"63cd16c58555a8c49d9983b9","userId":null,"telemetryAnonymousId":"63cd0b3dc28df4180bf59df2","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.1","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"6.0.3","node_version":"v16.17.0","mongosh_version":"1.6.1","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","fcv":"6.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2023-01-22T10:58:43.303Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({age:{\"$gt\":17}})"}}
{"t":{"$date":"2023-01-22T10:58:43.411Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"age":{"$gt":17}},"options":{}}}}
{"t":{"$date":"2023-01-22T10:58:47.780Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({age:{\"$gt\":20}})"}}
{"t":{"$date":"2023-01-22T10:58:47.784Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"age":{"$gt":20}},"options":{}}}}
{"t":{"$date":"2023-01-22T12:50:44.589Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:[\"python\"]})"}}
{"t":{"$date":"2023-01-22T12:50:44.593Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":["python"]},"options":{}}}}
{"t":{"$date":"2023-01-22T12:50:50.461Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:\"python\"})"}}
{"t":{"$date":"2023-01-22T12:50:50.467Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":"python"},"options":{}}}}
{"t":{"$date":"2023-01-22T12:57:20.796Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{things:[{t:1},{t:2},{t:3}] } )"}}
{"t":{"$date":"2023-01-22T12:57:20.804Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T12:57:20.886Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoInvalidArgumentError: Update document requires atomic operators","attr":{"message":"Update document requires atomic operators","name":"MongoInvalidArgumentError","stack":"MongoInvalidArgumentError: Update document requires atomic operators\n    at new UpdateManyOperation (/usr/bin/mongosh:54930:13)\n    at Collection.updateMany (/usr/bin/mongosh:61989:74)\n    at CliServiceProvider.updateMany (/usr/bin/mongosh:126096:70)\n    at Proxy.updateMany (/usr/bin/mongosh:372837:55)\n    at async Proxy.updateMany (/usr/bin/mongosh:367645:14)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367352:22)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367377:16)\n    at async REPL9:42:25\n    at async ShellEvaluator.innerEval (/usr/bin/mongosh:472455:14)\n    at async ShellEvaluator.customEval (/usr/bin/mongosh:472462:30)"}}
{"t":{"$date":"2023-01-22T12:57:37.728Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({}, { things: [ { t: 1 }, { t: 2 }, { t: 3 }] })"}}
{"t":{"$date":"2023-01-22T12:57:37.735Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T12:57:37.739Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoInvalidArgumentError: Update document requires atomic operators","attr":{"message":"Update document requires atomic operators","name":"MongoInvalidArgumentError","stack":"MongoInvalidArgumentError: Update document requires atomic operators\n    at new UpdateManyOperation (/usr/bin/mongosh:54930:13)\n    at Collection.updateMany (/usr/bin/mongosh:61989:74)\n    at CliServiceProvider.updateMany (/usr/bin/mongosh:126096:70)\n    at Proxy.updateMany (/usr/bin/mongosh:372837:55)\n    at async Proxy.updateMany (/usr/bin/mongosh:367645:14)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367352:22)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367377:16)\n    at async REPL10:42:25\n    at async ShellEvaluator.innerEval (/usr/bin/mongosh:472455:14)\n    at async ShellEvaluator.customEval (/usr/bin/mongosh:472462:30)"}}
{"t":{"$date":"2023-01-22T12:58:06.972Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({}, {'$set': {things: [ { t: 1 }, { t: 2 }, { t: 3 }]} })"}}
{"t":{"$date":"2023-01-22T12:58:06.977Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T12:58:13.118Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T12:58:13.125Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T12:58:42.572Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({things:{'$elemMatch':{t:1}}})"}}
{"t":{"$date":"2023-01-22T12:58:42.577Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"things":{"$elemMatch":{"t":1}}},"options":{}}}}
{"t":{"$date":"2023-01-22T12:58:45.443Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({things:{'$elemMatch':{t:1}}})"}}
{"t":{"$date":"2023-01-22T12:58:45.449Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"things":{"$elemMatch":{"t":1}}},"options":{}}}}
{"t":{"$date":"2023-01-22T12:58:53.452Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({things:{'$elemMatch':{t:2}}})"}}
{"t":{"$date":"2023-01-22T12:58:53.461Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"things":{"$elemMatch":{"t":2}}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:00:09.095Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({things:{'$elemMatch':{'$gt':{t:1}}}})"}}
{"t":{"$date":"2023-01-22T13:00:09.099Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"things":{"$elemMatch":{"$gt":{"t":1}}}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:00:14.425Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({things:{'$elemMatch':{'$gt':{t:5}}}})"}}
{"t":{"$date":"2023-01-22T13:00:14.431Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"things":{"$elemMatch":{"$gt":{"t":5}}}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:08:04.963Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find().pretty()"}}
{"t":{"$date":"2023-01-22T13:08:04.969Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T13:10:46.816Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.updateMany({},{\"$inc\":{age:50}} )"}}
{"t":{"$date":"2023-01-22T13:10:46.823Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.updateMany is not a function","attr":{"message":"db.updateMany is not a function","name":"TypeError","stack":"TypeError: db.updateMany is not a function\n    at REPL19:34:120\n    at REPL19:52:5\n    at REPL19:57:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T13:10:52.107Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{\"$inc\":{age:50}} )"}}
{"t":{"$date":"2023-01-22T13:10:52.113Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T13:10:58.006Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T13:10:58.016Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T13:11:14.626Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{\"$set\":{dumyyyyyyyyyyyyyyyy:50}} )"}}
{"t":{"$date":"2023-01-22T13:11:14.633Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T13:11:20.686Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T13:11:20.691Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T13:16:16.599Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{\"$set\":{dumyyyyyyyyyyyyyyyy:50}} )"}}
{"t":{"$date":"2023-01-22T13:16:16.607Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T13:17:39.428Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{$all:['python'],$size:5}})"}}
{"t":{"$date":"2023-01-22T13:17:39.435Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$all":["python"],"$size":5}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:17:58.776Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{$matchElement:'python',$size:5}})"}}
{"t":{"$date":"2023-01-22T13:17:58.784Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$matchElement":"python","$size":5}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:17:58.792Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: unknown operator: $matchElement","attr":{"ok":0,"code":2,"codeName":"BadValue","message":"unknown operator: $matchElement","name":"MongoServerError","stack":"MongoServerError: unknown operator: $matchElement\n    at Connection.onMessage (/usr/bin/mongosh:98081:20)\n    at MessageStream.<anonymous> (/usr/bin/mongosh:97873:56)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (/usr/bin/mongosh:97686:12)\n    at MessageStream._write (/usr/bin/mongosh:97568:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-01-22T13:18:06.773Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{$elemMatch:'python',$size:5}})"}}
{"t":{"$date":"2023-01-22T13:18:06.777Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$elemMatch":"python","$size":5}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:18:06.786Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: $elemMatch needs an Object","attr":{"ok":0,"code":2,"codeName":"BadValue","message":"$elemMatch needs an Object","name":"MongoServerError","stack":"MongoServerError: $elemMatch needs an Object\n    at Connection.onMessage (/usr/bin/mongosh:98081:20)\n    at MessageStream.<anonymous> (/usr/bin/mongosh:97873:56)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (/usr/bin/mongosh:97686:12)\n    at MessageStream._write (/usr/bin/mongosh:97568:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-01-22T13:18:26.954Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{$elemMatch:{\"$eq\":\"python\"},$size:5}})"}}
{"t":{"$date":"2023-01-22T13:18:26.963Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$elemMatch":{"$eq":"python"},"$size":5}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:18:33.523Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{$elemMatch:{\"$eq\":\"python\"}}})"}}
{"t":{"$date":"2023-01-22T13:18:33.528Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$elemMatch":{"$eq":"python"}}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:18:41.341Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T13:18:41.347Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T13:19:14.640Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({things:{$elemMatch:{\"$eq\":\"python\"}}})"}}
{"t":{"$date":"2023-01-22T13:19:14.645Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"things":{"$elemMatch":{"$eq":"python"}}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:19:23.642Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({things:{$elemMatch:{t:1}}})"}}
{"t":{"$date":"2023-01-22T13:19:23.647Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"things":{"$elemMatch":{"t":1}}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:19:29.058Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({things:{$elemMatch:{t:5}}})"}}
{"t":{"$date":"2023-01-22T13:19:29.063Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"things":{"$elemMatch":{"t":5}}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:19:31.327Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({things:{$elemMatch:{t:1}}})"}}
{"t":{"$date":"2023-01-22T13:19:31.334Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"things":{"$elemMatch":{"t":1}}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:20:01.270Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{$all:[ 'python', 'JAVA', 'PHP' ],$size:5}})"}}
{"t":{"$date":"2023-01-22T13:20:01.276Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$all":["python","JAVA","PHP"],"$size":5}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:20:16.713Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{$all:[ 'python', 'JAVA', 'PHP' ],$size:5}})"}}
{"t":{"$date":"2023-01-22T13:20:16.717Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$all":["python","JAVA","PHP"],"$size":5}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:20:47.950Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{$all:[ 'python', 'JAVA', 'PHP' ],$size:1}})"}}
{"t":{"$date":"2023-01-22T13:20:47.954Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$all":["python","JAVA","PHP"],"$size":1}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:20:51.482Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{$all:[ 'python', 'JAVA', 'PHP' ]}})"}}
{"t":{"$date":"2023-01-22T13:20:51.488Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$all":["python","JAVA","PHP"]}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:21:05.310Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:{\"$all\":[ 'python', 'JAVA', 'PHP' ]}})"}}
{"t":{"$date":"2023-01-22T13:21:05.320Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":{"$all":["python","JAVA","PHP"]}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:21:25.266Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({jobs:[ 'python', 'JAVA', 'PHP' ]})"}}
{"t":{"$date":"2023-01-22T13:21:25.271Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"jobs":["python","JAVA","PHP"]},"options":{}}}}
{"t":{"$date":"2023-01-22T13:21:33.893Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:[ 'python', 'JAVA', 'PHP' ]})"}}
{"t":{"$date":"2023-01-22T13:21:33.897Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":["python","JAVA","PHP"]},"options":{}}}}
{"t":{"$date":"2023-01-22T13:21:40.942Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:{\"$all\":[ 'python', 'JAVA', 'PHP' ]}})"}}
{"t":{"$date":"2023-01-22T13:21:40.949Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":{"$all":["python","JAVA","PHP"]}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:21:54.041Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:{\"$all\":[ 'python', 'JAVA', 'PHP' ],\"$size\":1}})"}}
{"t":{"$date":"2023-01-22T13:21:54.044Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":{"$all":["python","JAVA","PHP"],"$size":1}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:21:57.498Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:{\"$all\":[ 'python', 'JAVA', 'PHP' ],\"$size\":3}})"}}
{"t":{"$date":"2023-01-22T13:21:57.503Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":{"$all":["python","JAVA","PHP"],"$size":3}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:22:01.143Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:{\"$all\":[ 'python', 'JAVA', 'PHP' ],\"$size\":2}})"}}
{"t":{"$date":"2023-01-22T13:22:01.146Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":{"$all":["python","JAVA","PHP"],"$size":2}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:22:14.119Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:{\"$all\":[ 'python', 'JAVA', 'PHP' ],\"$size\":2}})"}}
{"t":{"$date":"2023-01-22T13:22:14.123Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":{"$all":["python","JAVA","PHP"],"$size":2}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:22:16.756Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:{\"$all\":[ 'python', 'JAVA', 'PHP' ],\"$size\":5}})"}}
{"t":{"$date":"2023-01-22T13:22:16.760Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":{"$all":["python","JAVA","PHP"],"$size":5}},"options":{}}}}
{"t":{"$date":"2023-01-22T13:22:19.479Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({job:{\"$all\":[ 'python', 'JAVA', 'PHP' ],\"$size\":3}})"}}
{"t":{"$date":"2023-01-22T13:22:19.484Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"job":{"$all":["python","JAVA","PHP"],"$size":3}},"options":{}}}}
{"t":{"$date":"2023-01-22T14:44:47.284Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{$push:{jobs:\"sidali\"}})"}}
{"t":{"$date":"2023-01-22T14:44:47.287Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T14:45:02.575Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T14:45:02.577Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T14:45:12.398Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{$push:{job:\"sidali\"}})"}}
{"t":{"$date":"2023-01-22T14:45:12.401Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T14:45:15.285Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T14:45:15.287Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T14:45:29.249Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T14:45:29.251Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T14:45:31.161Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{$push:{job:\"sidali\"}})"}}
{"t":{"$date":"2023-01-22T14:45:31.165Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T14:45:34.656Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{$push:{job:\"sidali1\"}})"}}
{"t":{"$date":"2023-01-22T14:45:34.660Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T14:45:44.818Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T14:45:44.820Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T14:48:10.094Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.find().count()"}}
{"t":{"$date":"2023-01-22T14:48:10.100Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.find is not a function","attr":{"message":"db.find is not a function","name":"TypeError","stack":"TypeError: db.find is not a function\n    at REPL57:34:145\n    at REPL57:48:5\n    at REPL57:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T14:48:17.497Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find().count()"}}
{"t":{"$date":"2023-01-22T14:48:17.499Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T14:48:17.501Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Cursor","method":"count"}}
{"t":{"$date":"2023-01-22T14:53:16.266Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{$push:{job:[\"item1\",\"item2\",\"item3\"],$each:true}})"}}
{"t":{"$date":"2023-01-22T14:53:16.269Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T14:53:16.282Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: The dollar ($) prefixed field '$each' in '$each' is not allowed in the context of an update's replacement document. Consider using an aggregation pipeline with $replaceWith.","attr":{"index":0,"code":52,"message":"The dollar ($) prefixed field '$each' in '$each' is not allowed in the context of an update's replacement document. Consider using an aggregation pipeline with $replaceWith.","name":"MongoServerError","stack":"MongoServerError: The dollar ($) prefixed field '$each' in '$each' is not allowed in the context of an update's replacement document. Consider using an aggregation pipeline with $replaceWith.\n    at /usr/bin/mongosh:54941:44\n    at /usr/bin/mongosh:100345:13\n    at /usr/bin/mongosh:101487:9\n    at handleOperationResult (/usr/bin/mongosh:101631:14)\n    at Connection.onMessage (/usr/bin/mongosh:98093:5)\n    at MessageStream.<anonymous> (/usr/bin/mongosh:97873:56)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (/usr/bin/mongosh:97686:12)\n    at MessageStream._write (/usr/bin/mongosh:97568:5)"}}
{"t":{"$date":"2023-01-22T14:55:40.027Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{$push:{job:{$each:[\"item1\",\"item2\",\"item3\"]}} })"}}
{"t":{"$date":"2023-01-22T14:55:40.031Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T14:55:49.524Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"users.find()"}}
{"t":{"$date":"2023-01-22T14:55:49.529Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: users is not defined","attr":{"message":"users is not defined","name":"ReferenceError","stack":"ReferenceError: users is not defined\n    at REPL61:34:9\n    at REPL61:48:5\n    at REPL61:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T14:55:56.394Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T14:55:56.398Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T15:01:09.488Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{jobs:''})"}}
{"t":{"$date":"2023-01-22T15:01:09.492Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T15:01:09.495Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoInvalidArgumentError: Update document requires atomic operators","attr":{"message":"Update document requires atomic operators","name":"MongoInvalidArgumentError","stack":"MongoInvalidArgumentError: Update document requires atomic operators\n    at new UpdateManyOperation (/usr/bin/mongosh:54930:13)\n    at Collection.updateMany (/usr/bin/mongosh:61989:74)\n    at CliServiceProvider.updateMany (/usr/bin/mongosh:126096:70)\n    at Proxy.updateMany (/usr/bin/mongosh:372837:55)\n    at async Proxy.updateMany (/usr/bin/mongosh:367645:14)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367352:22)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367377:16)\n    at async REPL63:36:25\n    at async ShellEvaluator.innerEval (/usr/bin/mongosh:472455:14)\n    at async ShellEvaluator.customEval (/usr/bin/mongosh:472462:30)"}}
{"t":{"$date":"2023-01-22T15:01:28.972Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({},{$unset:{jobs:\"\"}})"}}
{"t":{"$date":"2023-01-22T15:01:28.976Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{},"options":{}}}}
{"t":{"$date":"2023-01-22T15:01:39.949Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T15:01:39.954Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T15:06:35.007Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateOne({sidali:\"sidali\"},{$upsert:true})"}}
{"t":{"$date":"2023-01-22T15:06:35.013Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateOne","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{"sidali":"sidali"},"options":{}}}}
{"t":{"$date":"2023-01-22T15:06:35.021Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Unknown modifier: $upsert. Expected a valid update modifier or pipeline-style update specified as an array","attr":{"index":0,"code":9,"message":"Unknown modifier: $upsert. Expected a valid update modifier or pipeline-style update specified as an array","name":"MongoServerError","stack":"MongoServerError: Unknown modifier: $upsert. Expected a valid update modifier or pipeline-style update specified as an array\n    at /usr/bin/mongosh:54907:44\n    at /usr/bin/mongosh:100345:13\n    at /usr/bin/mongosh:101487:9\n    at handleOperationResult (/usr/bin/mongosh:101631:14)\n    at Connection.onMessage (/usr/bin/mongosh:98093:5)\n    at MessageStream.<anonymous> (/usr/bin/mongosh:97873:56)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (/usr/bin/mongosh:97686:12)\n    at MessageStream._write (/usr/bin/mongosh:97568:5)"}}
{"t":{"$date":"2023-01-22T15:07:37.904Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:38)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mupdateOne({sidali\u001b[33m:\u001b[39m\u001b[32m\"sidali\"\u001b[39m}\u001b[33m,\u001b[39m{{$upsert\u001b[33m:\u001b[39m\u001b[36mtrue\u001b[39m}})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":38,"index":38},"pos":38,"message":"Unexpected token (1:38)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mupdateOne({sidali\u001b[33m:\u001b[39m\u001b[32m\"sidali\"\u001b[39m}\u001b[33m,\u001b[39m{{$upsert\u001b[33m:\u001b[39m\u001b[36mtrue\u001b[39m}})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:38)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mupdateOne({sidali\u001b[33m:\u001b[39m\u001b[32m\"sidali\"\u001b[39m}\u001b[33m,\u001b[39m{{$upsert\u001b[33m:\u001b[39m\u001b[36mtrue\u001b[39m}})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-01-22T15:08:02.211Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateOne({sidali:\"sidali\"},{},{upsert:true})"}}
{"t":{"$date":"2023-01-22T15:08:02.214Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateOne","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{"sidali":"sidali"},"options":{"upsert":true}}}}
{"t":{"$date":"2023-01-22T15:08:02.223Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoInvalidArgumentError: Update document requires atomic operators","attr":{"message":"Update document requires atomic operators","name":"MongoInvalidArgumentError","stack":"MongoInvalidArgumentError: Update document requires atomic operators\n    at new UpdateOneOperation (/usr/bin/mongosh:54896:13)\n    at Collection.updateOne (/usr/bin/mongosh:61979:74)\n    at CliServiceProvider.updateOne (/usr/bin/mongosh:126103:64)\n    at Proxy.updateOne (/usr/bin/mongosh:372856:55)\n    at async Proxy.updateOne (/usr/bin/mongosh:367645:14)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367352:22)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367377:16)\n    at async REPL72:38:25\n    at async ShellEvaluator.innerEval (/usr/bin/mongosh:472455:14)\n    at async ShellEvaluator.customEval (/usr/bin/mongosh:472462:30)"}}
{"t":{"$date":"2023-01-22T15:08:18.271Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateOne({ sidali: \"sidali\" }, {$set:{k:\"sidali\"}}, { upsert: true })"}}
{"t":{"$date":"2023-01-22T15:08:18.275Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateOne","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{"sidali":"sidali"},"options":{"upsert":true}}}}
{"t":{"$date":"2023-01-22T15:08:29.543Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token, expected \",\" (1:30)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mfind({sidali\u001b[33m:\u001b[39m\u001b[32m\"sidali\"\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":30,"index":30},"pos":30,"message":"Unexpected token, expected \",\" (1:30)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mfind({sidali\u001b[33m:\u001b[39m\u001b[32m\"sidali\"\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token, expected \",\" (1:30)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mfind({sidali\u001b[33m:\u001b[39m\u001b[32m\"sidali\"\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-01-22T15:08:31.866Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token, expected \",\" (1:30)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mfind({sidali\u001b[33m:\u001b[39m\u001b[32m\"sidali\"\u001b[39m))\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":30,"index":30},"pos":30,"message":"Unexpected token, expected \",\" (1:30)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mfind({sidali\u001b[33m:\u001b[39m\u001b[32m\"sidali\"\u001b[39m))\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token, expected \",\" (1:30)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mfind({sidali\u001b[33m:\u001b[39m\u001b[32m\"sidali\"\u001b[39m))\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-01-22T15:08:36.490Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({sidali:\"sidali\"})"}}
{"t":{"$date":"2023-01-22T15:08:36.496Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"sidali":"sidali"},"options":{}}}}
{"t":{"$date":"2023-01-22T15:27:56.845Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T15:27:56.848Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T15:28:03.057Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find() | more"}}
{"t":{"$date":"2023-01-22T15:28:03.060Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T15:28:03.062Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: more is not defined","attr":{"message":"more is not defined","name":"ReferenceError","stack":"ReferenceError: more is not defined\n    at REPL78:34:244\n    at async ShellEvaluator.innerEval (/usr/bin/mongosh:472455:14)\n    at async ShellEvaluator.customEval (/usr/bin/mongosh:472462:30)\n    at async MongoshNodeRepl.eval (/usr/bin/mongosh:547261:24)\n    at async PrettyREPLServer.repl.eval (/usr/bin/mongosh:500521:18)"}}
{"t":{"$date":"2023-01-22T15:28:10.209Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T15:28:10.213Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T15:29:13.661Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.aggregate([{$project:{name:1}}])"}}
{"t":{"$date":"2023-01-22T15:29:13.664Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"db1","coll":"users","arguments":{"options":{},"pipeline":[{"$project":{"name":1}}]}}}
{"t":{"$date":"2023-01-22T15:29:33.736Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.aggregate([{$project:{name:1}},{$sort:{name:1}}])"}}
{"t":{"$date":"2023-01-22T15:29:33.739Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"db1","coll":"users","arguments":{"options":{},"pipeline":[{"$project":{"name":1}},{"$sort":{"name":1}}]}}}
{"t":{"$date":"2023-01-22T15:29:45.865Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.aggregate([{$project:{name:1}},{$sort:{name:-1}}])"}}
{"t":{"$date":"2023-01-22T15:29:45.869Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"db1","coll":"users","arguments":{"options":{},"pipeline":[{"$project":{"name":1}},{"$sort":{"name":-1}}]}}}
{"t":{"$date":"2023-01-22T15:29:47.340Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.aggregate([{$project:{name:1}},{$sort:{name:-1}}])"}}
{"t":{"$date":"2023-01-22T15:29:47.344Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"db1","coll":"users","arguments":{"options":{},"pipeline":[{"$project":{"name":1}},{"$sort":{"name":-1}}]}}}
{"t":{"$date":"2023-01-22T15:29:58.972Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:40)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39maggregate([{$project\u001b[33m:\u001b[39m{\u001b[32m\"address\"\u001b[39m}}\u001b[33m,\u001b[39m{$sort\u001b[33m:\u001b[39m{name\u001b[33m:\u001b[39m\u001b[33m-\u001b[39m\u001b[35m1\u001b[39m}}])\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":40,"index":40},"pos":40,"message":"Unexpected token (1:40)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39maggregate([{$project\u001b[33m:\u001b[39m{\u001b[32m\"address\"\u001b[39m}}\u001b[33m,\u001b[39m{$sort\u001b[33m:\u001b[39m{name\u001b[33m:\u001b[39m\u001b[33m-\u001b[39m\u001b[35m1\u001b[39m}}])\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:40)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39maggregate([{$project\u001b[33m:\u001b[39m{\u001b[32m\"address\"\u001b[39m}}\u001b[33m,\u001b[39m{$sort\u001b[33m:\u001b[39m{name\u001b[33m:\u001b[39m\u001b[33m-\u001b[39m\u001b[35m1\u001b[39m}}])\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-01-22T15:30:05.995Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.aggregate([{$project:{\"address.city\":1}},{$sort:{name:-1}}])"}}
{"t":{"$date":"2023-01-22T15:30:05.999Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"db1","coll":"users","arguments":{"options":{},"pipeline":[{"$project":{"address.city":1}},{"$sort":{"name":-1}}]}}}
{"t":{"$date":"2023-01-22T15:31:41.381Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"users"}}
{"t":{"$date":"2023-01-22T15:31:41.385Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: users is not defined","attr":{"message":"users is not defined","name":"ReferenceError","stack":"ReferenceError: users is not defined\n    at REPL86:34:9\n    at REPL86:48:5\n    at REPL86:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T15:31:54.149Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({})"}}
{"t":{"$date":"2023-01-22T15:31:54.153Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2023-01-22T15:47:20.845Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.aggregate([  \n                              {'$group':{\"_id\" : \"$age\", \"res\": {'$sum' : 1}}}\n\n                            ]);"}}
{"t":{"$date":"2023-01-22T15:47:20.847Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"db1","coll":"users","arguments":{"options":{},"pipeline":[{"$group":{"_id":"$age","res":{"$sum":1}}}]}}}
{"t":{"$date":"2023-01-22T16:05:07.047Z"},"s":"I","c":"MONGOSH","id":1000000045,"ctx":"analytics","msg":"Flushed outstanding data","attr":{"flushError":null,"flushDuration":0}}
