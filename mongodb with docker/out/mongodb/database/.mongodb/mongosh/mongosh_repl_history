db.users.aggregate([ { '$group': { "_id": "$age", "res": { '$sum': 1 } } }]);
db.users.find({})
users
db.users.aggregate([{$project:{"address.city":1}},{$sort:{name:-1}}])
db.users.aggregate([{$project:{"address"}},{$sort:{name:-1}}])
db.users.aggregate([{$project:{name:1}},{$sort:{name:-1}}])
db.users.aggregate([{$project:{name:1}},{$sort:{name:1}}])
db.users.aggregate([{$project:{name:1}}])
db.users.find()
db.users.find() | more
db.users.find()
db.users.find({sidali:"sidali"})
db.users.find({sidali:"sidali"))
db.users.find({sidali:"sidali")
db.users.updateOne({ sidali: "sidali" }, {$set:{k:"sidali"}}, { upsert: true })
db.users.updateOne({ sidali: "sidali" }, {}, { upsert: true })
db.users.updateOne({sidali:"sidali"},{{$upsert:true}})
db.users.updateOne({sidali:"sidali"},{$upsert:true})
db.users.find()
db.users.updateMany({},{$unset:{jobs:""}})
db.users.updateMany({},{jobs:''})
db.users.find()
users.find()
db.users.updateMany({},{$push:{job:{$each:["item1","item2","item3"]}} })
db.users.updateMany({},{$push:{job:["item1","item2","item3"],$each:true}})
db.users.find().count()
db.find().count()
db.users.find()
db.users.updateMany({},{$push:{job:"sidali1"}})
db.users.updateMany({},{$push:{job:"sidali"}})
db.users.find()
db.users.updateMany({},{$push:{job:"sidali"}})
db.users.find()
db.users.updateMany({},{$push:{jobs:"sidali"}})
db.users.find({job:{"$all":[ 'python', 'JAVA', 'PHP' ],"$size":3}})
db.users.find({job:{"$all":[ 'python', 'JAVA', 'PHP' ],"$size":5}})
db.users.find({job:{"$all":[ 'python', 'JAVA', 'PHP' ],"$size":2}})
db.users.find({job:{"$all":[ 'python', 'JAVA', 'PHP' ],"$size":3}})
db.users.find({job:{"$all":[ 'python', 'JAVA', 'PHP' ],"$size":1}})
db.users.find({job:{"$all":[ 'python', 'JAVA', 'PHP' ]}})
db.users.find({job:[ 'python', 'JAVA', 'PHP' ]})
db.users.find({jobs:[ 'python', 'JAVA', 'PHP' ]})
db.users.find({jobs:{"$all":[ 'python', 'JAVA', 'PHP' ]}})
db.users.find({jobs:{$all:[ 'python', 'JAVA', 'PHP' ]}})
db.users.find({jobs:{$all:[ 'python', 'JAVA', 'PHP' ],$size:1}})
db.users.find({jobs:{$all:[ 'python', 'JAVA', 'PHP' ],$size:5}})
db.users.find({things:{$elemMatch:{t:1}}})
db.users.find({things:{$elemMatch:{t:5}}})
db.users.find({things:{$elemMatch:{t:1}}})
db.users.find({things:{$elemMatch:{"$eq":"python"}}})
db.users.find()
db.users.find({jobs:{$elemMatch:{"$eq":"python"}}})
db.users.find({jobs:{$elemMatch:{"$eq":"python"},$size:5}})
db.users.find({jobs:{$elemMatch:'python',$size:5}})
db.users.find({jobs:{$matchElement:'python',$size:5}})
db.users.find({jobs:{$all:['python'],$size:5}})
db.users.updateMany({},{"$set":{dumyyyyyyyyyyyyyyyy:50}} )
db.users.find()
db.users.updateMany({},{"$set":{dumyyyyyyyyyyyyyyyy:50}} )
db.users.find()
db.users.updateMany({},{"$inc":{age:50}} )
db.updateMany({},{"$inc":{age:50}} )
db.users.find().pretty()
db.users.find({things:{'$elemMatch':{'$gt':{t:5}}}})
db.users.find({things:{'$elemMatch':{'$gt':{t:1}}}})
db.users.find({things:{'$elemMatch':{t:2}}})
db.users.find({things:{'$elemMatch':{t:1}}})
db.users.find()
db.users.updateMany({}, {'$set': {things: [ { t: 1 }, { t: 2 }, { t: 3 }]} })
db.users.updateMany({}, { things: [ { t: 1 }, { t: 2 }, { t: 3 }] })
db.users.updateMany({}, { things: [{ t: 1 }, { t: 2 }, { t: 3 }] })
db.users.find({job:"python"})
db.users.find({job:["python"]})
db.users.find({age:{"$gt":20}})
db.users.find({age:{"$gt":17}})
use db1
db.users.find({'$gt':{age:15}})
db.users.distinct("age")
db.users.save()
db.testu.find()
db.testu.insertMany([{},{}])
db.testu.insertMany([{},{}]}
db.users.update({name:'said'},{"$inc":{age:1}})
db.users.updateMany({name:'said'},{"$inc":{age:1}})
db.users.updateMany({name:'said'})
db.users.find({name:'said'})
db.users.updateOne({name:'said'},{"$inc":{age:1}})
db.users.find({name:'said'})
db.users.updateOne({name:'said'},{"$inc":{age:1}})
db.users.find()
db.users.countDocuments()
db.users.findMany()
db.users.findK()
db.users.find()
db.users.findOne()
db.users.find()
db.users.insertOne({data:"dumy document"})
db.users.insert({data:"dumy document"})
db.insertOne({sidali:"dumy document"})
db.insert({sidali:"dumy document"})
db.insert()
db.users.find()
show collections;
db help;
db help
help
db.collection_names()
db.collections()
db.collectins()
use db1;
show dbs;ins()
use db1;
show dbs;