{"t":{"$date":"2023-01-22T10:09:01.146Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":"xterm"},"version":"1.6.1","distributionKind":"compiled","buildArch":"x64","buildPlatform":"linux","buildTarget":"linux-x64","buildTime":"2022-11-30T13:59:57.200Z","gitVersion":"51c067456d3e0127156ef1722a44659151e01a12","nodeVersion":"v16.17.0","opensslVersion":"1.1.1q+quic","sharedOpenssl":false}}
{"t":{"$date":"2023-01-22T10:09:01.153Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2023-01-22T10:09:01.191Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.1","driver":{"name":"nodejs|mongosh","version":"4.12.1"},"devtoolsConnectVersion":"1.4.3","host":"127.0.0.1:27017"}}
{"t":{"$date":"2023-01-22T10:09:01.197Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2023-01-22T10:09:01.210Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2023-01-22T10:09:01.225Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"63cd0b3db559f0b13e3a8edd","userId":null,"telemetryAnonymousId":"63cd0b3dc28df4180bf59df2","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.1","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"6.0.3","node_version":"v16.17.0","mongosh_version":"1.6.1","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","fcv":"6.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2023-01-22T10:09:01.227Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"ping":1}}}}
{"t":{"$date":"2023-01-22T10:09:01.228Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-01-22T10:09:01.326Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2023-01-22T10:09:01.328Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show startupWarnings"}}
{"t":{"$date":"2023-01-22T10:09:01.330Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getLog":"startupWarnings"}}}}
{"t":{"$date":"2023-01-22T10:09:01.331Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-01-22T10:09:01.331Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show freeMonitoring"}}
{"t":{"$date":"2023-01-22T10:09:01.331Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getFreeMonitoringStatus":1}}}}
{"t":{"$date":"2023-01-22T10:09:01.332Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-01-22T10:09:01.333Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show automationNotices"}}
{"t":{"$date":"2023-01-22T10:09:01.334Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"hello","class":"Database","db":"test","arguments":{}}}
{"t":{"$date":"2023-01-22T10:09:01.334Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000024,"ctx":"snippets","msg":"Fetching snippet index","attr":{"refreshMode":"allow-cached"}}
{"t":{"$date":"2023-01-22T10:09:01.365Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2023-01-22T10:09:01.366Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000028,"ctx":"snippets","msg":"Modifying snippets package.json failed","attr":{"error":"ENOENT: no such file or directory, open '/data/db/.mongodb/mongosh/snippets/package.json'"}}
{"t":{"$date":"2023-01-22T10:09:01.371Z"},"s":"I","c":"MONGOSH","id":1000000002,"ctx":"repl","msg":"Started REPL","attr":{"version":"1.6.1"}}
{"t":{"$date":"2023-01-22T10:09:02.741Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000027,"ctx":"snippets","msg":"Fetching snippet index done"}
{"t":{"$date":"2023-01-22T10:09:07.233Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show dbs"}}
{"t":{"$date":"2023-01-22T10:09:14.801Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"db1"}}
{"t":{"$date":"2023-01-22T10:09:14.813Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"63cd0b3db559f0b13e3a8edd","userId":null,"telemetryAnonymousId":"63cd0b3dc28df4180bf59df2","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.1","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"6.0.3","node_version":"v16.17.0","mongosh_version":"1.6.1","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","fcv":"6.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2023-01-22T10:09:43.663Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.collectins()"}}
{"t":{"$date":"2023-01-22T10:09:43.734Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.collectins is not a function","attr":{"message":"db.collectins is not a function","name":"TypeError","stack":"TypeError: db.collectins is not a function\n    at REPL4:188:111\n    at REPL4:202:5\n    at REPL4:207:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T10:09:47.430Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.collections()"}}
{"t":{"$date":"2023-01-22T10:09:47.434Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.collections is not a function","attr":{"message":"db.collections is not a function","name":"TypeError","stack":"TypeError: db.collections is not a function\n    at REPL5:34:112\n    at REPL5:48:5\n    at REPL5:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T10:09:58.428Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.collection_names()"}}
{"t":{"$date":"2023-01-22T10:09:58.431Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.collection_names is not a function","attr":{"message":"db.collection_names is not a function","name":"TypeError","stack":"TypeError: db.collection_names is not a function\n    at REPL6:34:117\n    at REPL6:48:5\n    at REPL6:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T10:10:10.102Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"help"}}
{"t":{"$date":"2023-01-22T10:10:18.950Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Missing semicolon. (1:2)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db help\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":1,"column":2,"index":2},"pos":2,"message":"Missing semicolon. (1:2)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db help\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Missing semicolon. (1:2)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db help\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-01-22T10:10:24.140Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Missing semicolon. (1:2)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db help\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":1,"column":2,"index":2},"pos":2,"message":"Missing semicolon. (1:2)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db help\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Missing semicolon. (1:2)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db help\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-01-22T10:10:49.405Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show collections"}}
{"t":{"$date":"2023-01-22T10:11:03.219Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T10:11:03.226Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T10:14:56.650Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.insert()"}}
{"t":{"$date":"2023-01-22T10:14:56.653Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.insert is not a function","attr":{"message":"db.insert is not a function","name":"TypeError","stack":"TypeError: db.insert is not a function\n    at REPL14:34:107\n    at REPL14:48:5\n    at REPL14:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T10:15:06.367Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.insert({sidali:\"dumy document\"})"}}
{"t":{"$date":"2023-01-22T10:15:06.374Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.insert is not a function","attr":{"message":"db.insert is not a function","name":"TypeError","stack":"TypeError: db.insert is not a function\n    at REPL15:34:121\n    at REPL15:50:5\n    at REPL15:55:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T10:15:11.894Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.insertOne({sidali:\"dumy document\"})"}}
{"t":{"$date":"2023-01-22T10:15:11.898Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.insertOne is not a function","attr":{"message":"db.insertOne is not a function","name":"TypeError","stack":"TypeError: db.insertOne is not a function\n    at REPL16:34:121\n    at REPL16:50:5\n    at REPL16:55:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T10:15:31.341Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.insert({data:\"dumy document\"})"}}
{"t":{"$date":"2023-01-22T10:15:31.346Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T10:15:31.351Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-01-22T10:15:50.468Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.insertOne({data:\"dumy document\"})"}}
{"t":{"$date":"2023-01-22T10:15:50.473Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insertOne","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T10:18:40.440Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T10:18:40.446Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T10:18:51.462Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.findOne()"}}
{"t":{"$date":"2023-01-22T10:18:51.474Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOne","class":"Collection","db":"db1","coll":"users","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2023-01-22T10:18:58.933Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T10:18:58.938Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T10:19:01.635Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.findK()"}}
{"t":{"$date":"2023-01-22T10:19:01.645Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getCollection","class":"Database","db":"db1","arguments":{"coll":"users.findK"}}}
{"t":{"$date":"2023-01-22T10:19:01.645Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.users.findK is not a function","attr":{"message":"db.users.findK is not a function","name":"TypeError","stack":"TypeError: db.users.findK is not a function\n    at REPL22:34:179\n    at REPL22:48:5\n    at REPL22:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T10:19:05.468Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.findMany()"}}
{"t":{"$date":"2023-01-22T10:19:05.475Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getCollection","class":"Database","db":"db1","arguments":{"coll":"users.findMany"}}}
{"t":{"$date":"2023-01-22T10:19:05.475Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.users.findMany is not a function","attr":{"message":"db.users.findMany is not a function","name":"TypeError","stack":"TypeError: db.users.findMany is not a function\n    at REPL23:34:182\n    at REPL23:48:5\n    at REPL23:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T10:20:42.892Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.countDocuments()"}}
{"t":{"$date":"2023-01-22T10:20:42.900Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"countDocuments","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T10:22:55.280Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find()"}}
{"t":{"$date":"2023-01-22T10:22:55.284Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T10:27:15.779Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateOne({name:'said'},{\"$inc\":{age:1}})"}}
{"t":{"$date":"2023-01-22T10:27:15.786Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateOne","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{"name":"said"},"options":{}}}}
{"t":{"$date":"2023-01-22T10:27:34.850Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({name:'said'})"}}
{"t":{"$date":"2023-01-22T10:27:34.855Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"name":"said"},"options":{}}}}
{"t":{"$date":"2023-01-22T10:27:38.122Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({name:'said'})"}}
{"t":{"$date":"2023-01-22T10:27:38.129Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"name":"said"},"options":{}}}}
{"t":{"$date":"2023-01-22T10:27:56.101Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateOne({name:'said'},{\"$inc\":{age:1}})"}}
{"t":{"$date":"2023-01-22T10:27:56.109Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateOne","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{"name":"said"},"options":{}}}}
{"t":{"$date":"2023-01-22T10:27:58.430Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({name:'said'})"}}
{"t":{"$date":"2023-01-22T10:27:58.435Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"name":"said"},"options":{}}}}
{"t":{"$date":"2023-01-22T10:29:38.570Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({name:'said'})"}}
{"t":{"$date":"2023-01-22T10:29:38.576Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{"name":"said"},"options":{}}}}
{"t":{"$date":"2023-01-22T10:29:38.581Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoInvalidArgumentError: Update document requires atomic operators","attr":{"message":"Update document requires atomic operators","name":"MongoInvalidArgumentError","stack":"MongoInvalidArgumentError: Update document requires atomic operators\n    at new UpdateManyOperation (/usr/bin/mongosh:54930:13)\n    at Collection.updateMany (/usr/bin/mongosh:61989:74)\n    at CliServiceProvider.updateMany (/usr/bin/mongosh:126096:70)\n    at Proxy.updateMany (/usr/bin/mongosh:372837:55)\n    at async Proxy.updateMany (/usr/bin/mongosh:367645:14)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367352:22)\n    at async Proxy.<anonymous> (/usr/bin/mongosh:367377:16)\n    at async REPL31:36:25\n    at async ShellEvaluator.innerEval (/usr/bin/mongosh:472455:14)\n    at async ShellEvaluator.customEval (/usr/bin/mongosh:472462:30)"}}
{"t":{"$date":"2023-01-22T10:29:56.407Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.updateMany({name:'said'},{\"$inc\":{age:1}})"}}
{"t":{"$date":"2023-01-22T10:29:56.415Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateMany","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{"name":"said"},"options":{}}}}
{"t":{"$date":"2023-01-22T10:30:11.540Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.update({name:'said'},{\"$inc\":{age:1}})"}}
{"t":{"$date":"2023-01-22T10:30:11.548Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"update","class":"Collection","db":"db1","coll":"users","arguments":{"filter":{"name":"said"},"options":{}}}}
{"t":{"$date":"2023-01-22T10:30:11.551Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"update"}}
{"t":{"$date":"2023-01-22T10:40:06.511Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token, expected \",\" (1:27)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mtestu\u001b[33m.\u001b[39minsertMany([{}\u001b[33m,\u001b[39m{}]}\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":27,"index":27},"pos":27,"message":"Unexpected token, expected \",\" (1:27)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mtestu\u001b[33m.\u001b[39minsertMany([{}\u001b[33m,\u001b[39m{}]}\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token, expected \",\" (1:27)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mtestu\u001b[33m.\u001b[39minsertMany([{}\u001b[33m,\u001b[39m{}]}\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-01-22T10:40:15.252Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.testu.insertMany([{},{}])"}}
{"t":{"$date":"2023-01-22T10:40:15.260Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insertMany","class":"Collection","db":"db1","coll":"testu","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T10:40:23.773Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.testu.find()"}}
{"t":{"$date":"2023-01-22T10:40:23.779Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"testu","arguments":{"options":{}}}}
{"t":{"$date":"2023-01-22T10:45:58.766Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.save()"}}
{"t":{"$date":"2023-01-22T10:45:58.773Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getCollection","class":"Database","db":"db1","arguments":{"coll":"users.save"}}}
{"t":{"$date":"2023-01-22T10:45:58.773Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.users.save is not a function","attr":{"message":"db.users.save is not a function","name":"TypeError","stack":"TypeError: db.users.save is not a function\n    at REPL37:34:178\n    at REPL37:48:5\n    at REPL37:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /usr/bin/mongosh:500626:14\n    at /usr/bin/mongosh:500644:14\n    at node:internal/util:361:7"}}
{"t":{"$date":"2023-01-22T10:46:24.577Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.distinct(\"age\")"}}
{"t":{"$date":"2023-01-22T10:46:24.583Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"distinct","class":"Collection","db":"db1","coll":"users","arguments":{"field":"age","options":{}}}}
{"t":{"$date":"2023-01-22T10:55:40.166Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.users.find({'$gt':{age:15}})"}}
{"t":{"$date":"2023-01-22T10:55:40.173Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"db1","coll":"users","arguments":{"query":{"$gt":{"age":15}},"options":{}}}}
{"t":{"$date":"2023-01-22T10:55:40.185Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: unknown top level operator: $gt. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","attr":{"ok":0,"code":2,"codeName":"BadValue","message":"unknown top level operator: $gt. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: unknown top level operator: $gt. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.\n    at Connection.onMessage (/usr/bin/mongosh:98081:20)\n    at MessageStream.<anonymous> (/usr/bin/mongosh:97873:56)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (/usr/bin/mongosh:97686:12)\n    at MessageStream._write (/usr/bin/mongosh:97568:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
